rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isBusinessOwner(businessData) {
      return isAuthenticated() && request.auth.uid == businessData.ownerId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if true;
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update, delete: if isOwner(userId);
    }

    // Businesses collection
    match /businesses/{businessId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isBusinessOwner(resource.data);
      allow delete: if isBusinessOwner(resource.data);
    }

    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }

    // Bookings collection
    match /bookings/{bookingId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId ||
        request.auth.uid == resource.data.businessOwnerId
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.userId ||
        request.auth.uid == resource.data.businessOwnerId
      );
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }

    // Favorites collection
    match /favorites/{favoriteId} {
      allow read: if true;
      allow write: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
    }
  }
}
